.hidden-text-3 {
  grid-area: span 3 / span 3;
  overflow: hidden;
  display: grid;
  place-items: end;
  padding: var(--global-padding);
  &:hover p {
    opacity: 1;
  }
  p {
    position: absolute;
    opacity: 0;
    z-index: 3;
    margin: var(--gp);
    transition:
        opacity $short-ease,
        transform $short-ease;
  }
  h2 {
    text-align: right;
  }
}

.box-white {
  background-color: rgba(255, 255, 255, 0);
  position: relative;
  &::before {
    @extend %pseudo-full;
    z-index: 1;
    background: $diagonal-strokes;
    border-top: 1px solid $stroke;
    border-bottom: 1px solid $stroke;
    transform: scale(0, 1);
    transform-origin: 70% 100%;
    transition:
        transform $short-ease,
        opacity $short-ease;
    opacity: 0;
  }
  &::after {
    @extend %pseudo-full;
    z-index: 1;
    border-left: 1px solid $stroke;
  }
  &:hover::before {
    transform: scale(1, 1);
    opacity: 1;
  }
}


.image-box-2 {
  grid-area: span 2 / span 2;
  place-items: end;
  text-align: right;
  h3 {
    z-index: 3;
    position: relative;
    transition: transform $short-ease;
  }
  &:hover h3 {
    transform: translateY(calc( var(--gp) * 2 + 1em ));
  }
  div {
    position: absolute;
    z-index: 5;
    height: 100%;
    width: 100%;
    transform: scale(0.9);
    opacity: 0;
    transition:
        opacity $short-ease,
        transform $short-ease;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: 50% 50%;
  }
  &:hover div {
    opacity: 1;
  }
}

.copy-box-tall {
  grid-area: span 3 / span 2;
  place-items: end;
  text-align: left;
  div { padding-left: calc( var(--gp) * 2 ); }
  h3 {
    z-index: 3;
    position: relative;
    transition: transform $short-ease;
    margin-bottom: 1em;
  }
  p.read-more {
    text-align: right;
    color: lighten($off-black, 40%);
    margin-top: 1em;
    padding-right: 0;
  }
}

.shutter-2 {
  grid-area: span 1 / span 1;
  display: grid;
  position: relative;
  grid-template-columns: repeat(1, 1fr);
  grid-template-rows: repeat(4, 1fr);
  h2 {
    position: absolute;
    z-index: 5;
    transition:
        color 150ms cubic-bezier(0, 0, 0.03, 0.99),
        transform 150ms cubic-bezier(0, 0, 0.03, 0.99);
  }
  .shutter {
    grid-area: span 1 / span 1;
    position: relative;
    &::before {
      @extend %pseudo-full;
      z-index: 1;
      background-color: #F6BD60;
      transition: transform 150ms cubic-bezier(0, 0, 0.03, 0.99);
    }
  }
  .left {
    &::before {
      transform: scale(0, 1);
      transform-origin: left;
    }
  }
  .right{
    &::before {
      transform: scale(0, 1);
      transform-origin: right;
    }
  }
  .top {
    &::before {
      transform: scale(1, 0);
      transform-origin: top;
    }
  }
  .bottom {
    &::before {
      transform: scale(1, 0);
      transform-origin: bottom;
    }
  }

  &:hover .left::before {
    transform: scale(1,1);
  }
  &:hover .right::before {
    transform: scale(1,1);
  }
  &:hover .bottom::before {
    transform: scale(1,1);
  }
  &:hover .top::before {
    transform: scale(1,1);
  }
  &:hover h2 {
    color: $bg;
    transform: translateX(calc(var(--gp) * 3));
  }
}


.blinds {
  grid-area: span 1 / span 1;
  display: grid;
  position: relative;
  box-shadow: inset 10px 0 $stroke;
  svg {
    z-index: 5;
    fill: $bg;
    //background-color: $diagonal-strokes;
  }
  &:hover::before, &:hover::after {
    transform: scale(1, 1);
  }
  &::before {
    @extend %pseudo-full;
    z-index: 1;
    transform: scale(0, 1);
    transform-origin: 100% 50%;
    background:
        repeating-linear-gradient(
                0deg,
                rgba(0, 0, 0, 0),
                rgba(0, 0, 0, 0) calc( var(--gp) / 2 ),
                $yellow calc( var(--gp) / 2 ),
                $yellow calc( 1 * var(--gp) )
        );
    transition: transform 300ms cubic-bezier(0, 0, 0.03, 0.99);
  }
  &::after {
    @extend %pseudo-full;
    z-index: 1;
    transform: scale(0, 1);
    transform-origin: 0% 50%;
    background:
        repeating-linear-gradient(
                0deg,
                $yellow,
                $yellow calc(var(--gp) / 2),
                rgba(0, 0, 0, 0) calc(var(--gp) / 2),
                rgba(0, 0, 0, 0) calc(1*var(--gp))
        );
    transition: transform 300ms cubic-bezier(0, 0, 0.03, 0.99);
  }
}

.curtains {
  grid-area: span 1 / span 1;
  display: grid;
  position: relative;
  &:hover::before, &:hover::after {
    transform: scale(1, 1);
  }
  &::before {
    @extend %pseudo-full;
    z-index: 1;
    transform: scale(0, 1);
    transform-origin: 100% 50%;
    background:
        repeating-linear-gradient(
                90deg,
                rgba(0, 0, 0, 0),
                rgba(0, 0, 0, 0) var(--gp),
                $yellow var(--gp),
                $yellow calc( 2 * var(--gp))
        );
    transition: transform 300ms cubic-bezier(0, 0, 0.03, 0.99);
  }
  &::after {
    @extend %pseudo-full;
    z-index: 1;
    transform: scale(0, 1);
    transform-origin: 0% 50%;
    background:
        repeating-linear-gradient(
                90deg,
                $yellow,
                $yellow var(--gp),
                rgba(0, 0, 0, 0) var(--gp),
                rgba(0, 0, 0, 0) calc(2*var(--gp))
        );
    transition: transform 300ms cubic-bezier(0, 0, 0.03, 0.99);
  }
}


.image-4-2 {
  grid-area: span 4 / span 2;
  background-size: cover;
  background-repeat: no-repeat;
}

.skew-box {
  grid-area: span 1 / span 1;
  position: relative;
  height: var(--gs);
  height: calc( 6 * var(--gs) );
  //border-left: 1.5px solid $stroke;
  //border-right: 2px solid $stroke;
  box-shadow: inset -2px 0 $stroke;
  &::before {
    @extend %pseudo-full;
    box-shadow: inset 2px 0 $stroke;
  }
  background-color: $bg;
  transform-origin: top;
    &:nth-child(odd){
      transform: skew(45deg, 0deg);
    }
    &:nth-child(even){
      transform: skew(-45deg, 0deg);
    }
}